// --- Mixins and functions --- //

@mixin breakpoint($size) {
  @if map-has-key($breakpoints, $size) {
    @media only screen and (min-width: map-get($breakpoints, $size)) {
      @content;
    }
  }
}

@mixin make-container() {  //todo
  padding-left: map-get($small, right-left-padding);
  padding-right: map-get($small, right-left-padding);
  @include breakpoint(medium) {
    max-width: map-get($medium, max-width);
    padding-left: map-get($medium, right-left-padding);
    padding-right: map-get($medium, right-left-padding);
    margin-left: auto;
    margin-right: auto;
  }
  @include breakpoint(large) {
    max-width: map-get($large, max-width);
    padding-left: map-get($large, right-left-padding);
    padding-right: map-get($large, right-left-padding);
    margin-left: auto;
    margin-right: auto;
  }
}

@function flex-item-width($cols, $spacer) {
  @return calc((100% - #{$spacer * ($cols - 1)}) / #{$cols});  // (3, 1rem) => calc((100% - 2rem) / 3);
}

@function color-to-string($color) {
  @return str-slice(#{$color}, 2);  // #F4F8FB => 'F4F8FB'
}

@function image-url($size, $text) {
  $bg-color: color-to-string($image-bg-color);
  $text-color: color-to-string($image-text-color);
  @return url('https://via.placeholder.com/#{$size}/#{$bg-color}/#{$text-color}/?text=#{$text}');
}
